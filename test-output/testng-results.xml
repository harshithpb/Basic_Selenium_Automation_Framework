<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" ignored="0" total="6" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="121393" started-at="2021-07-22T13:53:37 IST" finished-at="2021-07-22T13:55:38 IST">
    <groups>
    </groups>
    <test name="Test" duration-ms="121393" started-at="2021-07-22T13:53:37 IST" finished-at="2021-07-22T13:55:38 IST">
      <class name="insuaranceCalc_Motorcycle.ErrorTests_motorcycle">
        <test-method status="PASS" signature="setupMethod()[pri:0, instance:insuaranceCalc_Motorcycle.ErrorTests_motorcycle@196a42c3]" name="setupMethod" is-config="true" duration-ms="10884" started-at="2021-07-22T13:54:54 IST" finished-at="2021-07-22T13:55:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method status="PASS" signature="errorMesssage_cylinderField()[pri:0, instance:insuaranceCalc_Motorcycle.ErrorTests_motorcycle@196a42c3]" name="errorMesssage_cylinderField" duration-ms="2485" started-at="2021-07-22T13:55:05 IST" finished-at="2021-07-22T13:55:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- errorMesssage_cylinderField -->
        <test-method status="PASS" signature="endMethod()[pri:0, instance:insuaranceCalc_Motorcycle.ErrorTests_motorcycle@196a42c3]" name="endMethod" is-config="true" duration-ms="4542" started-at="2021-07-22T13:55:08 IST" finished-at="2021-07-22T13:55:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endMethod -->
        <test-method status="PASS" signature="setupMethod()[pri:0, instance:insuaranceCalc_Motorcycle.ErrorTests_motorcycle@196a42c3]" name="setupMethod" is-config="true" duration-ms="9698" started-at="2021-07-22T13:55:12 IST" finished-at="2021-07-22T13:55:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method status="FAIL" signature="errorMesssage_cylinderField1()[pri:0, instance:insuaranceCalc_Motorcycle.ErrorTests_motorcycle@196a42c3]" name="errorMesssage_cylinderField1" duration-ms="2139" started-at="2021-07-22T13:55:22 IST" finished-at="2021-07-22T13:55:24 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Error Message is not as expected on cyclinder capacity field expected [Must be a number between 1 and 3000] but found [Must be a number between 1 and 2000]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Error Message is not as expected on cyclinder capacity field expected [Must be a number between 1 and 3000] but found [Must be a number between 1 and 2000]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at insuaranceCalc_Motorcycle.ErrorTests_motorcycle.errorMesssage_cylinderField1(ErrorTests_motorcycle.java:33)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- errorMesssage_cylinderField1 -->
        <test-method status="PASS" signature="endMethod()[pri:0, instance:insuaranceCalc_Motorcycle.ErrorTests_motorcycle@196a42c3]" name="endMethod" is-config="true" duration-ms="372" started-at="2021-07-22T13:55:24 IST" finished-at="2021-07-22T13:55:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endMethod -->
        <test-method status="PASS" signature="setupMethod()[pri:0, instance:insuaranceCalc_Motorcycle.ErrorTests_motorcycle@196a42c3]" name="setupMethod" is-config="true" duration-ms="10274" started-at="2021-07-22T13:55:25 IST" finished-at="2021-07-22T13:55:35 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method status="PASS" signature="verifyModelDropdownOptions()[pri:0, instance:insuaranceCalc_Motorcycle.ErrorTests_motorcycle@196a42c3]" name="verifyModelDropdownOptions" duration-ms="2380" started-at="2021-07-22T13:55:35 IST" finished-at="2021-07-22T13:55:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyModelDropdownOptions -->
        <test-method status="PASS" signature="endMethod()[pri:0, instance:insuaranceCalc_Motorcycle.ErrorTests_motorcycle@196a42c3]" name="endMethod" is-config="true" duration-ms="396" started-at="2021-07-22T13:55:38 IST" finished-at="2021-07-22T13:55:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endMethod -->
      </class> <!-- insuaranceCalc_Motorcycle.ErrorTests_motorcycle -->
      <class name="insuaranceCalc_Motorcycle.EndToEndTests_motorcycle">
        <test-method status="PASS" signature="setupMethod()[pri:0, instance:insuaranceCalc_Motorcycle.EndToEndTests_motorcycle@69e153c5]" name="setupMethod" is-config="true" duration-ms="15687" started-at="2021-07-22T13:53:37 IST" finished-at="2021-07-22T13:53:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method status="PASS" signature="insuranceCalculate(java.lang.Object)[pri:0, instance:insuaranceCalc_Motorcycle.EndToEndTests_motorcycle@69e153c5]" name="insuranceCalculate" duration-ms="18641" started-at="2021-07-22T13:53:53 IST" data-provider="vehData" finished-at="2021-07-22T13:54:12 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Vehicle_List Price=888, Product_startdate=12/12/2022, PriceValidation_Gold=696.00, TC No=1, Vehicle_Annual Mileage=100, Product_insurancesum= 5.000.000,00, Vehicle_Date of Manufacture=09/04/2019, Insurant_Hobby=speeding,Other, SelectOption=Silver, PriceValidation_Ultimate=2,604.00, PriceValidation_Silver=236.00, Vehicle_Make=Honda, Insurant_occupation=Farmer, Vehicle_No of Seats_motorcycle=2, Insurant_LastName=NNN, Product_OptionalProducts=Euro Protection, Vehicle_Enging Performance=666, Insurant_ImageFilePath=??, Vehicle_Model=Motorcycle, Insurant_country=India, Insurant_zipcode=444061, Product_damageinsurance=Partial Coverage, TC Name=Verify Insurance Premium for Honda MotorCycle, Vehicle_CylinderCapacity=333, PriceValidation_Platinum=1,367.00, Insurant_FirstName=Prakash, Insurant_birthdate=12/12/1989, Insurant_gender=Male}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insuranceCalculate -->
        <test-method status="PASS" signature="endMethod()[pri:0, instance:insuaranceCalc_Motorcycle.EndToEndTests_motorcycle@69e153c5]" name="endMethod" is-config="true" duration-ms="347" started-at="2021-07-22T13:54:12 IST" finished-at="2021-07-22T13:54:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endMethod -->
        <test-method status="PASS" signature="setupMethod()[pri:0, instance:insuaranceCalc_Motorcycle.EndToEndTests_motorcycle@69e153c5]" name="setupMethod" is-config="true" duration-ms="9562" started-at="2021-07-22T13:54:12 IST" finished-at="2021-07-22T13:54:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method status="FAIL" signature="insuranceCalculate(java.lang.Object)[pri:0, instance:insuaranceCalc_Motorcycle.EndToEndTests_motorcycle@69e153c5]" name="insuranceCalculate" duration-ms="16915" started-at="2021-07-22T13:54:22 IST" data-provider="vehData" finished-at="2021-07-22T13:54:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Vehicle_List Price=888, Product_startdate=12/12/2023, PriceValidation_Gold=772.00, TC No=2, Vehicle_Annual Mileage=100, Product_insurancesum= 20.000.000,00, Vehicle_Date of Manufacture=09/04/2001, Insurant_Hobby=speeding,Other, SelectOption=Gold, PriceValidation_Ultimate=2,604.00, PriceValidation_Silver=262.00, Vehicle_Make=Volvo, Insurant_occupation=Farmer, Vehicle_No of Seats_motorcycle=2, Insurant_LastName=NNN, Product_OptionalProducts=Euro Protection, Vehicle_Enging Performance=900, Insurant_ImageFilePath=??, Vehicle_Model=Scooter, Insurant_country=Sweden, Insurant_zipcode=444061, Product_damageinsurance=Partial Coverage, TC Name=Verify Insurance Premium for Volvo Scooter, Vehicle_CylinderCapacity=900, PriceValidation_Platinum=1,367.00, Insurant_FirstName=Seema, Insurant_birthdate=12/12/1977, Insurant_gender=Female}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Pricing for platimum plan is not matching. expected [1,367.00] but found [1,515.00]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Pricing for platimum plan is not matching. expected [1,367.00] but found [1,515.00]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at insuaranceCalc_Motorcycle.EndToEndTests_motorcycle.insuranceCalculate(EndToEndTests_motorcycle.java:35)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insuranceCalculate -->
        <test-method status="PASS" signature="endMethod()[pri:0, instance:insuaranceCalc_Motorcycle.EndToEndTests_motorcycle@69e153c5]" name="endMethod" is-config="true" duration-ms="200" started-at="2021-07-22T13:54:39 IST" finished-at="2021-07-22T13:54:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endMethod -->
        <test-method status="PASS" signature="setupMethod()[pri:0, instance:insuaranceCalc_Motorcycle.EndToEndTests_motorcycle@69e153c5]" name="setupMethod" is-config="true" duration-ms="10020" started-at="2021-07-22T13:54:39 IST" finished-at="2021-07-22T13:54:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method status="FAIL" signature="insuranceCalculate(java.lang.Object)[pri:0, instance:insuaranceCalc_Motorcycle.EndToEndTests_motorcycle@69e153c5]" name="insuranceCalculate" duration-ms="4810" started-at="2021-07-22T13:54:49 IST" data-provider="vehData" finished-at="2021-07-22T13:54:54 IST">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at pageObjects.EnterVehicleDataPageObject.enterVehicleData(EnterVehicleDataPageObject.java:68)
at insuaranceCalc_Motorcycle.EndToEndTests_motorcycle.insuranceCalculate(EndToEndTests_motorcycle.java:25)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insuranceCalculate -->
        <test-method status="PASS" signature="endMethod()[pri:0, instance:insuaranceCalc_Motorcycle.EndToEndTests_motorcycle@69e153c5]" name="endMethod" is-config="true" duration-ms="311" started-at="2021-07-22T13:54:54 IST" finished-at="2021-07-22T13:54:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endMethod -->
      </class> <!-- insuaranceCalc_Motorcycle.EndToEndTests_motorcycle -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
